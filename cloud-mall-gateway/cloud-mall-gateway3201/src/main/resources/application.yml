server:
  port: 3201
spring:
  application:
    name: cloud-mall-gateway
  #zipkin服务所在地址
  zipkin:
    base-url: http://localhost:9411/
  #配置采样百分比,开发环境可以设置为1，表示全部，生产就用默认
  sleuth:
    sampler:
      probability: 1
  #配置springBoot admin
  boot:
    admin:
      client:
        url:  http://localhost:8921   #这里配置admin server 的地址
        username: root
        password: 18420163207
  redis:
    port: 6379
    password:
    host: localhost
    database: 10     #使用db10
  #配置注册中心
  cloud:
    nacos:
      discovery:
        enabled: true
        username: nacos
        password: nacos
        server-addr: localhost:8848
    #配置sentinel
    sentinel:
      transport:
        port: 8720
        dashboard: localhost:8080
    #配置网关gateway和注册中心进行结合,只有这样gateway才能有负载均衡的能力
    gateway:
      discovery:
        locator:
          enabled: true
      #配置网关路由
      #注意：- Path的值最好不要一样，不然可能会访问404----------------
      routes:
        #可以配置多个路由，但是id必须唯一

        #配置product模块路由
        - id: cloud-mall-product
          uri: lb://cloud-mall-product
          predicates:
            - Path=/feign/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 50
                key-resolver: "#{@ipKeyResolver}"


        #配置system模块路由
        - id: cloud-mall-system
          uri: lb://cloud-mall-system
          predicates:
            - Path=/feign/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 50
                key-resolver: "#{@ipKeyResolver}"

        #配置user模块路由
        - id: cloud-mall-user
          uri: lb://cloud-mall-user
          predicates:
            - Path=/feign/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 50
                key-resolver: "#{@ipKeyResolver}"

        #配置search模块路由
        - id: cloud-mall-search
          uri: lb://cloud-mall-search
          predicates:
            - Path=/feign/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 50
                key-resolver: "#{@ipKeyResolver}"

        #配置web模块路由1
        - id: cloud-mall-web1
          uri: lb://cloud-mall-web
          predicates:
            - Path=/gitee/**

        #配置web模块路由2
        - id: cloud-mall-web2
          uri: lb://cloud-mall-web
          predicates:
            - Path=/github/**

        #配置web模块路由3
        - id: cloud-mall-web3
          uri: lb://cloud-mall-web
          predicates:
            - Path=/web/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 50
                key-resolver: "#{@ipKeyResolver}"


        #配置admin模块路由1
        - id: cloud-mall-admin
          uri: lb://cloud-mall-admin
          predicates:
            - Path=/admin/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 50
                key-resolver: "#{@ipKeyResolver}"

        #配置admin模块路由2
        - id: cloud-mall-admin
          uri: lb://cloud-mall-admin
          predicates:
            - Path=/pear/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 50
                key-resolver: "#{@ipKeyResolver}"

        #配置admin的登录模块路由
        - id: cloud-mall-admin
          uri: lb://cloud-mall-admin
          predicates:
            - Path=/adminLogin/**

        #配置人工客服模块路由
        - id: cloud-mall-chat
          uri: lb://cloud-mall-chat
          predicates:
            - Path=/chat/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 50
                key-resolver: "#{@ipKeyResolver}"

